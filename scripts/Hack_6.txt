/*Primera Ronda de Tablas*/
create table invoice_status(
id_invoice_status serial primary key,
status varchar(20) not null
);

create table countries(
id_country serial primary key,
name varchar(60) not null
);

create table roles(
id_role serial primary key,
name varchar (60) not null
);

create table taxes(
id_tax serial primary key,
percentage integer not null
);

create table offers(
id_offer serial primary key,
status varchar(20) not null
);

create table discounts(
id_discount serial primary key,
status varchar(20) not null,
percentage integer not null
);

create table payments(
id_payment serial primary key,
type_payment varchar(30) not null
);

/*Segunda Ronda de Tablas*/

create table products(
id_product serial primary key,
id_discount integer not null,
id_offer integer not null,
id_tax integer not null,
name varchar(30) not null,
details text not null,
minimum_stock integer not null,
maximum_stock integer not null,
current_stock integer not null,
price numeric not null,
price_with_tax numeric not null,
foreign key (id_discount) references discounts(id_discount),
foreign key (id_offer) references offers(id_offer),
foreign key (id_tax) references taxes(id_tax)
);

create table customers(
id_customer serial primary key,
id_country integer not null,
id_role integer not null,
name varchar(60) not null,
age integer not null,
password varchar(120),
physical_address text not null,
foreign key (id_country) references countries(id_country),
foreign key (id_role) references roles(id_role)
);

create table invoices(
id_invoice serial primary key,
id_customer integer not null,
id_payment integer not null,
id_invoice_status integer not null,
invoice_date date not null,
total_to_pay numeric not null,
foreign key (id_customer) references customers(id_customer),
foreign key (id_payment) references payments(id_payment),
foreign key (id_invoice_status) references invoice_status(id_invoice_status)
);

/*Tercera Ronda de Tablas*/

create table orders(
id_order serial primary key,
id_invoice integer not null,
id_product integer not null,
details text not null,
amount integer not null,
price numeric not null,
foreign key (id_invoice) references invoices(id_invoice),
foreign key (id_product) references products(id_product)
);

create table products_customers(
id_product integer not null,
id_customer integer not null,
foreign key (id_product) references products(id_product),
foreign key (id_customer) references customers(id_customer),
primary key (id_customer, id_product)
);

insert into invoice_status (status) values ('Orden Exitosa'), ('Orden En Proceso'), ('Orden Cancelada');
select * from invoice_status;

insert into countries (name) values ('Argentina'), ('Brazil'), ('Venezuela');
select * from countries;

insert into roles (name) values ('cliente fijo'), ('cliente frecuente'), ('cliente nuevo'); /*la diferencia entre cliente fijo y cliente frecuente es que el fijo ha hecho 100 o mas compras*/
select * from roles;

insert into taxes (percentage) values ('12'), ('15'), ('18');
select * from taxes;

insert into offers (status) values ('activa'), ('inactiva'), ('descontinuada'); 
/*la diferencia entre la inactiva y la descontinuada es que la inactiva puede 
volver a estar activa, la descontinuada no*/

select * from offers;

insert into discounts (status, percentage) 
values ('activo', '50'), ('inactivo', '25'), ('descontinuado', '0');
select * from discounts;

insert into payments (type_payment) values ('tarjeta debito/credito'), ('efectivo'), ('pago movil');
select * from payments;

insert into products (id_discount, id_offer, id_tax, name, details, minimum_stock, maximum_stock, current_stock, price, price_with_tax)
values (2,1,2,'zapatos', 'marca: nike, adidas, new balance', '50', '500', '375', '100','112'),
(3,2,1,'franelas', 'marca: champion, new balance, hollister', '100', '1000', '764', '50','59'),
(1,3,3,'sweaters','marca: champion, new balance, hollister','75','750', '421','75', '86.25');
select * from products;

insert into customers (id_country, id_role, name, age, password, physical_address) 
values (3,2,'foo', '25', 'fooz1m4n', 'Caracas'), 
(2,1,'bar', '29', 'b4rz1m4n', 'Valencia'), 
(1,3,'qux','32','qux1234','Miranda');
select * from customers;

insert into products_customers (id_product, id_customer)
values (2, 3),(3, 2),(1, 2);
select * from products_customers;

insert into invoices (id_customer, id_payment, id_invoice_status, invoice_date, total_to_pay)
values 
(2, 1, 1, '2023-01-01', '100'),
(2, 2, 1, '2023-02-01', '200'),
(3, 3, 1, '2023-03-01', '300');
select * from invoices;

insert into orders (id_order, id_invoice, id_product, details, amount, price)
values (1,1,3, 'champion', '1', '75'), 
(2,2,1, 'adidas', '2', '200'), 
(3,3,2, 'hollister', '3', '150');
select * from orders;

delete from customers where name = 'foo';

update customers set name = 'quxman', password = 'quxm4n1234' where name = 'qux';

update taxes set percentage = '13' where percentage = '12';
update taxes set percentage = '16' where percentage = '15';
update taxes set percentage = '20' where percentage = '18';

update products set price = '125' where price = '100';
update products set price = '75' where price = '50';
update products set price = '100' where price = '75';

select * from invoices inner join customers on invoices.id_customer = customers.id_customer;